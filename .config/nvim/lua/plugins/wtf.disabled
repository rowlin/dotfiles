return {
  "piersolenski/wtf.nvim",
  dependencies = {
    "nvim-lua/plenary.nvim",
    "MunifTanjim/nui.nvim",
  },
  opts = {
    config = {
      -- Directory for storing chat files
      chat_dir = vim.fn.stdpath("data"):gsub("/$", "") .. "/wtf/chats",
      -- Default AI popup type
      popup_type = "popup", --| "horizontal" | "vertical"
      -- The default provider
      provider = "openai",
      -- Configure providers
      providers = {
        openai = {
          -- An alternative way to set your API key
          api_key = function()
            return os.getenv("OPENAI_API_KEY")
          end,
          -- Your preferred model
          model_id = "gpt-5-nano",
        },
      },
      -- Set your preferred language for the response
      language = "english",
      -- Any additional instructions
      additional_instructions = "Start the reply with 'OH HAI THERE'",
      -- Default search engine, can be overridden by passing an option to WtfSeatch
      search_engine = "google", -- | "duck_duck_go" | "stack_overflow" | "github" | "phind" | "perplexity",
      -- Callbacks
      hooks = {
        request_started = nil,
        request_finished = nil,
      },
      -- Add custom colours
      winhighlight = "Normal:Normal,FloatBorder:FloatBorder",
    },
  },
  keys = {
    {
      "<leader>wd",
      mode = { "n", "x" },
      function()
        require("wtf").diagnose()
      end,
      desc = "Debug diagnostic with AI",
    },
    {
      "<leader>wf",
      mode = { "n", "x" },
      function()
        require("wtf").fix()
      end,
      desc = "Fix dianostic with AI",
    },
    {
      mode = { "n" },
      "<leader>ws",
      function()
        require("wtf").search()
      end,
      desc = "Search diagnostic with Google",
    },
    {
      mode = { "n" },
      "<leader>wp",
      function()
        require("wtf").pick_provider()
      end,
      desc = "Pick provider",
    },
    {
      mode = { "n" },
      "<leader>wh",
      function()
        require("wtf").history()
      end,
      desc = "Populate the quickfix list with previous chat history",
    },
  },
}
