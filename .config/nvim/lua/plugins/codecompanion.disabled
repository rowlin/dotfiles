-- return {
--   "olimorris/codecompanion.nvim",
--   opts = {},
--   config = function()
--     require("codecompanion").setup({
--       adapters = {
--         openai = function()
--           return require("codecompanion.adapters").extend("openai", {
--             env = {
--               api_key = os.getenv("OPENAI_API_KEY"),
--             },
--           })
--         end,
--         extensions = {
--           history = {
--             enabled = true,
--             opts = {
--               -- Keymap to open history from chat buffer (default: gh)
--               keymap = "gh",
--               -- Keymap to save the current chat manually (when auto_save is disabled)
--               save_chat_keymap = "sc",
--               -- Save all chats by default (disable to save only manually using 'sc')
--               auto_save = true,
--               -- Number of days after which chats are automatically deleted (0 to disable)
--               expiration_days = 0,
--               -- Picker interface (auto resolved to a valid picker)
--               picker = "telescope", --- ("telescope", "snacks", "fzf-lua", or "default")
--               -- Customize picker keymaps (optional)
--               picker_keymaps = {
--                 rename = { n = "r", i = "<M-r>" },
--                 delete = { n = "d", i = "<M-d>" },
--                 duplicate = { n = "<C-y>", i = "<C-y>" },
--               },
--               ---Automatically generate titles for new chats
--               auto_generate_title = true,
--               title_generation_opts = {
--                 ---Adapter for generating titles (defaults to current chat adapter)
--                 adapter = nil, -- "copilot"
--                 ---Model for generating titles (defaults to current chat model)
--                 model = nil, -- "gpt-4o"
--                 ---Number of user prompts after which to refresh the title (0 to disable)
--                 refresh_every_n_prompts = 0, -- e.g., 3 to refresh after every 3rd user prompt
--                 ---Maximum number of times to refresh the title (default: 3)
--                 max_refreshes = 3,
--               },
--               ---On exiting and entering neovim, loads the last chat on opening chat
--               continue_last_chat = false,
--               ---When chat is cleared with `gx` delete the chat from history
--               delete_on_clearing_chat = false,
--               ---Directory path to save the chats
--               dir_to_save = vim.fn.stdpath("data") .. "/codecompanion-history",
--               ---Enable detailed logging for history extension
--               enable_logging = false,
--               ---Optional filter function to control which chats are shown when browsing
--               chat_filter = nil, -- function(chat_data) return boolean end
--             },
--           },
--         },
--       },
--       strategies = {
--         chat = { adapter = "openai" },
--         inline = { adapter = "openai" },
--         agent = { adapter = "openai" },
--       },
--     })
--   end,
--   dependencies = {
--     "nvim-lua/plenary.nvim",
--     "nvim-treesitter/nvim-treesitter",
--     "ravitemer/codecompanion-history.nvim",
--   },
-- }
